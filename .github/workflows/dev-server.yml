name: Prod Server

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

env:
  IMAGE_NAME: prod-server

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME
          docker buildx create --name mybuilder
          docker buildx use mybuilder
      - name: Log into registry
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_URL }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            ssh-keyscan ${{ secrets.DEV_SERVER_URL }} >> ~/.ssh/known_hosts
            scp -i ${{ secrets.DEV_SSH_KEY }} ./env ubuntu@${{ secrets.DEV_SERVER_URL }}:/home/ubuntu
            scp -i ${{ secrets.DEV_SSH_KEY }} ./config/global-bundle.pem ubuntu@${{ secrets.DEV_SERVER_URL }}:/home/ubuntu
            ssh -i ${{ secrets.DEV_SSH_KEY }} ubuntu@${{ secrets.DEV_SERVER_URL }} 'sh deploy-backend.sh'
